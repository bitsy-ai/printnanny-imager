[package]
name = "printnanny-imager"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
edition = "2021"
rust-version = "1.57"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.0.0", features = [] }

[dependencies]
anyhow = "1.0.64"
human_bytes = "0.3.1"
log = "0.4.17"                 # A lightweight logging facade for Rust 
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.0.0", features = ["dialog-all", "os-all", "shell-all"] }
tempfile = "3.3.0"            # A library for managing temporary files and directories.
thiserror = { version = "1.0" }
once_cell = "1.14.0"            # Single assignment cells and lazy values.

[dependencies.tauri-plugin-log]
git = "https://github.com/tauri-apps/tauri-plugin-log"
branch = "dev"
[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = [ "custom-protocol" ]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = [ "tauri/custom-protocol" ]


[target.'cfg(target_os = "macos")'.dependencies]
security-framework = { version = "2.6.1" }

[target.'cfg(unix)'.dependencies]
nix = {version = "0.25.0" }                     # Rust friendly bindings to *nix APIs

[target.'cfg(windows)'.dependencies]
windows = {version = "0.40", features = [
    "Win32_Storage_FileSystem", 
    "Win32_Foundation", 
    "Win32_Security",
    "Win32_System_IO",
    "Win32_System_Ioctl"
    ] }                     # Rust friendly bindings to WindowsRT/C++ APIs
embed-resource = "1.7.3"
regex = "1"
windows-drives = "0.5.0"
